import subprocess

bad_services = ['w3svc', 'ftpsvc' , 'PlugPlay' , 'NetTcpPortSharing', 'RemoteRegistry', 'lmhosts', 'W3SVC' , 'XboxGipSvc' , 'XblAuthManager', 'XblGameSave', 'XboxNetApiSvc', 'SNMPTRAP', 'RemoteAccess']

rdp_services = ['SessionEnv', 'TermService', 'UmRdpService' , 'RpcSs', ]

good_services = ['SecurityHealthService', 'Sense', 'WdNisSvc', 'WinDefend', 'mpssvc', 'EventLog', 'wuauserv', 'WSearch']

def check_rdp(rdp_services, good_services, bad_services):
  check_rdp = input("is rdp a critical service (would you like it to be enabled? (y/n): ").strip()
  if check_rdp == 'y':
    good_services.extend(rdp_services)
  else:
    bad_services.extend(rdp_services)

def config_services(service_list, start_or_stop, enabled_or_disabled):
    for service in service_list:
      result = subprocess.run(f'sc config "{service}" start= {enabled_or_disabled}', capture_output=True)
      print(result.stdout)
      #print(f"Service '{service}' startup type = {enabled_or_disabled}")
      result = subprocess.run(f'sc {start_or_stop} "{service}"', capture_output = True)
      print(result.stdout)
      #print(f"Service '{service}' has been {start_or_stop}ed")
      

check_rdp(rdp_services, good_services, bad_services)
config_services(bad_services, 'stop', 'Disabled')
config_services(good_services, 'start', 'auto')
